# Ash: 4 - Data Persistence

```elixir
Application.put_env(:ash, :validate_domain_resource_inclusion?, false)
Application.put_env(:ash, :validate_domain_config_inclusion?, false)
Mix.install([{:ash, "~> 3.0.0-rc"}], consolidate_protocols: false)
```

## Add Data Persistence with ETS

<div class="flex items-center w-full flex-start justify-between rounded-xl p-4" style="background-color: #f0f5f9; color: #61758a;">
<div class="flex">
<i class="ri-arrow-left-fill"></i>
<a class="flex ml-2" style="color: #61758a;" href="domain.livemd">Domain</a>
</div>
<div class="flex">
<i class="ri-home-fill"></i>
<a class="flex ml-2" style="color: #61758a;" href="overview.livemd">Home</a>
</div>
<div class="flex">
<a class="flex mr-2" style="color: #61758a;" href="querying.livemd">Querying</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>

### In this tutorial you will add data persistence to the Profile resource

Add the [ETS data layer](https://hexdocs.pm/ash/dsl-ash-datalayer-ets.html#ets) `data_layer: Ash.DataLayer.Ets` in the Profile resource like so:

<!-- livebook:{"force_markdown":true} -->

```elixir
 use Ash.Resource,
      domain: YourDomain,
      data_layer: Ash.DataLayer.Ets
```

A more common data persistence layer in production is [Postgres](https://github.com/ash-project/ash_postgres), but with ETS we keep dependencies to a minimum in this tutorial.

<details class="rounded-lg my-4" style="background-color: #96ef86; color: #040604;">
  <summary class="cursor-pointer font-bold p-4"></i>Show Solution</summary>
  <div class="p-4">

  ```elixir
  defmodule Tutorial.Profile do
    use Ash.Resource,
      domain: Tutorial,
      data_layer: Ash.DataLayer.Ets

    actions do
      defaults [:read]

      create :create do
        accept [:name]
      end
    end

    attributes do
      uuid_primary_key :id
      attribute :name, :string
    end
  end
  ```

  </div>
</details>

### Enter your solution

```elixir
defmodule Tutorial.Profile do
  use Ash.Resource,
  domain: Tutorial

  actions do
    defaults [:read]

    create :create do
      accept [:name]
    end
  end

  attributes do
    uuid_primary_key :id
    attribute :name, :string
  end
end
```

If everything is set up correctly, data now gets persisted to ETS. Next up you will **CRUD** on your resource.

<!-- livebook:{"break_markdown":true} -->

<div class="flex items-center w-full flex-start justify-between rounded-xl p-4" style="background-color: #f0f5f9; color: #61758a;">
<div class="flex">
<i class="ri-arrow-left-fill"></i>
<a class="flex ml-2" style="color: #61758a;" href="domain.livemd">Domain</a>
</div>
<div class="flex">
<i class="ri-home-fill"></i>
<a class="flex ml-2" style="color: #61758a;" href="overview.livemd">Home</a>
</div>
<div class="flex">
<a class="flex mr-2" style="color: #61758a;" href="querying.livemd">Querying</a>
<i class="ri-arrow-right-fill"></i>
</div>
</div>
